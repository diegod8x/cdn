import { ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { Observable, Subscription } from 'rxjs';
export declare class InputDatepickerComponent implements OnInit, OnChanges, OnDestroy {
    private render;
    private elementRef;
    showWindowDate: boolean;
    activeStylesDate: {};
    week: string[];
    monthActual: any;
    daysSelected: any;
    days: Date[];
    dateSelect: any;
    indexWeek: any;
    monthPrev: number;
    monthNext: number;
    year: number;
    monthActual2: any;
    monthSelected: any;
    daysSelected2: any;
    days2: Date[];
    dateSelect2: any;
    indexWeek2: any;
    monthPrev2: number;
    monthNext2: number;
    year2: number;
    dayClicked1: any;
    dayClicked2: any;
    dayClicked3: number;
    dayClicked4: number;
    dayClicked5: number;
    dayClicked6: number;
    fullDateSpanish1: any;
    fullDateSpanish2: any;
    activateButton: boolean;
    hideIcon2Right: boolean;
    hideIcon2Left: boolean;
    hideIcon1Right: boolean;
    hideIcon1Left: boolean;
    showIconOffDate: boolean;
    fromConver: string[];
    fullDaySaved: any;
    fullDaySaved2: any;
    resultBeDate: string;
    optionsShortYear: Object;
    resizeWindow: Object;
    optionsFullYear: Object;
    validatorDate: RegExp;
    validatorMMYYYY: RegExp;
    statusOpenCalendar: boolean;
    topCalendar: number;
    leftCalendar: number;
    infoInput: any;
    statusFtDte: boolean;
    statusClrInpt: boolean;
    eventsSubscription: Subscription;
    eventsSubscription2: Subscription;
    newTday: boolean;
    begaingDate2: string;
    dayClicked8: any;
    dayOfBegaingDate: string;
    fdateUnblock: boolean;
    dte: any;
    meses: string[];
    lasemana: string[];
    diassemana: string[];
    fromDateInput: ElementRef<HTMLInputElement>;
    toDateInput: ElementRef<HTMLInputElement>;
    calendar: ElementRef;
    distanceCalendar: ElementRef;
    nextM2: ElementRef;
    calendarInt: ElementRef;
    sizeIcon: string;
    clouseWindowActiveDate: boolean;
    onClickDate: EventEmitter<object>;
    activeWindowDate: EventEmitter<object>;
    onGetInfoInputDate: EventEmitter<any>;
    onClrInput: EventEmitter<any>;
    statusClr: Observable<void>;
    dteTo: boolean;
    set dteFutureUnlock(value: boolean);
    set extDte(value: string);
    set begaingDate(value: string);
    constructor(render: Renderer2, elementRef: ElementRef);
    onKeydownHandler(event: KeyboardEvent): void;
    onScroll(event: any): void;
    sizeChange(event: any): void;
    blockPaste(e: KeyboardEvent): void;
    blockCopy(e: KeyboardEvent): void;
    blockCut(e: KeyboardEvent): void;
    onKeydown(evt: KeyboardEvent): void;
    ngOnInit(): void;
    ngOnChanges(): void;
    ngOnDestroy(): void;
    clrInpt(): void;
    showSearchDate(): void;
    searchDateInputs(): void;
    keyUpDownInputDate(event: any): void;
    keyDownInputDate(): void;
    changeColorIcon(): void;
    prevMonth(): void;
    nextMonth(): void;
    getDaysFromDate(month: number, year: number): void;
    camelC(info: string): string;
    prevMonth2(): void;
    nextMonth2(): void;
    getDaysFromDate2(month: number, year: number): void;
    convertionDte(infoDte: any): string;
    statusFutureDte(nextDte: any): void;
    resetDte(): void;
    validChar(evt: any): boolean;
    validateTDte(dia: string, mes: string, ano: string): boolean;
    selectDayEvenLeft2(event: any): void;
    cleanData(cadena: any): any;
    selectDayEvenLeftReset(event: any): void;
    selectDayEvenLeft(event: any): void;
    selectDayEvenRight(event: any): void;
    dimentionCalendar(): void;
    showCalendar(): void;
    hiddeCalendar(): void;
    renameDate(fm: any, ty: any): string;
    addClassDaysRight(value: any): object;
    addClassDaysLeft(value: any, value2: any): object;
    deleteClassDaysRight(value?: string): void;
    deleteClassDaysLeft(value?: string): void;
    selectedDateLeft(): void;
    cornerStyleRightElement(): void;
    converDateValue(dateValue: string): Date;
    converDateValue2(dateValue: string): Date;
    validateActiveButton(fromConverValue: Date, toConverValue: Date, fromDateValue: string): void;
}
