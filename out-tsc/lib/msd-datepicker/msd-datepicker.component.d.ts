import { ElementRef, EventEmitter, OnInit, Renderer2 } from '@angular/core';
export declare class MsdDatepickerComponent implements OnInit {
    private render;
    private elementRef;
    showWindowDate: boolean;
    activeStylesDate: {};
    week: string[];
    monthActual: any;
    daysSelected: any;
    days: Date[];
    dateSelect: any;
    indexWeek: any;
    monthPrev: number;
    monthNext: number;
    year: number;
    monthActual2: any;
    monthSelected: any;
    daysSelected2: any;
    days2: Date[];
    dateSelect2: any;
    indexWeek2: any;
    monthPrev2: number;
    monthNext2: number;
    year2: number;
    dayClicked1: number;
    dayClicked2: number;
    dayClicked3: number;
    dayClicked4: number;
    dayClicked5: number;
    dayClicked6: number;
    fullDateSpanish1: any;
    fullDateSpanish2: any;
    activateButton: boolean;
    hideIcon2Right: boolean;
    hideIcon2Left: boolean;
    hideIcon1Right: boolean;
    hideIcon1Left: boolean;
    showIconOffDate: boolean;
    fromConver: string[];
    fullDaySaved: any;
    fullDaySaved2: any;
    resultBeDate: string;
    final: string;
    optionsShortYear: Object;
    resizeWindow: Object;
    optionsFullYear: Object;
    validatorDate: RegExp;
    validatorMMYYYY: RegExp;
    fromDateInput: ElementRef<HTMLInputElement>;
    toDateInput: ElementRef<HTMLInputElement>;
    calendar: ElementRef;
    nextM2: ElementRef;
    dropdate: ElementRef;
    sizeIcon: string;
    begaingDate: string;
    clouseWindowActiveDate: boolean;
    searchDateIcon: string;
    searchDateTitle: string;
    searchDateText1: string;
    searchDateText2: string;
    onClickDate: EventEmitter<object>;
    activeWindowDate: EventEmitter<object>;
    startDate: EventEmitter<string>;
    _startDate: string;
    endDate: EventEmitter<string>;
    _endDate: string;
    nextAction: EventEmitter<string>;
    _nextAction: string;
    constructor(render: Renderer2, elementRef: ElementRef);
    onKeydownHandler(event: KeyboardEvent): void;
    sizeChange(event: any): void;
    onKeydown(evt: KeyboardEvent): void;
    onScroll(event: any): void;
    onMouseEnter(targetElement: any): void;
    ngOnInit(): void;
    ngOnChanges(): void;
    showSearchDate(): void;
    open(): void;
    close(): void;
    fechaInicio(): string;
    fechaFinal(): string;
    searchDateInputs(): void;
    keyUpDownInputDate(event: any): void;
    keyDownInputDate(): void;
    changeColorIcon(): void;
    prevMonth(): void;
    nextMonth(): void;
    getDaysFromDate(month: number, year: number): void;
    prevMonth2(): void;
    nextMonth2(): void;
    getDaysFromDate2(month: number, year: number): void;
    selectDayEvenLeft(event: any): void;
    selectDayEvenRight(event: any): void;
    showCalendar(): void;
    addClassDaysRight(value: string | number): object;
    addClassDaysLeft(value: string | number): object;
    deleteClassDaysRight(value?: string): void;
    deleteClassDaysLeft(value?: string): void;
    selectedDateLeft(): void;
    cornerStyleLeftElement(classActivated?: string, value?: number): void;
    cornerStyleRightElement(): void;
    converDateValue(dateValue: string): Date;
    validateActiveButton(fromConverValue: Date, toConverValue: Date, fromDateValue: string, toDateValue: string): void;
}
